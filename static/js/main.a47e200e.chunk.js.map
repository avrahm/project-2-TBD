{"version":3,"sources":["components/HomeHeader/HomeHeader.js","components/ListOfParks/ListOfParks.js","components/SinglePark/SinglePark.js","components/Header/Header.js","components/RandomPark/RandomPark.js","components/AddNewEvent/AddNewEvent.js","components/ironrest.js","App.js","registerServiceWorker.js","index.js"],"names":["HomeHeader","to","className","Component","List","showParks","props","listOfParks","map","eachPark","i","key","attributes","ID","NAME","ADDRESS","PHONE","this","Single","thePark","randomPark","find","park","match","params","id","LAT","LON","Header","Random","randomNumber","Math","floor","random","length","SinglePark","AddNewEvent","handleInput","e","setState","target","name","value","submitNewPark","preventDefault","Axios","post","then","res","console","log","message","catch","err","error","state","tagline","description","first_brewed","brewers_tips","attenuation_level","contributed_by","onSubmit","htmlFor","type","onChange","height","ironrest","App","theParksFromMiamiDade","theEventsFromEventful","thePlacesFromFourSquare","showHeader","ready","axios","get","theResults","x","data","features","response","exact","path","component","render","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a47e200e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n// import homebutton from \"../../images/homebutton.png\"\n\nexport default class HomeHeader extends Component {\n  render() {\n    return (\n      \n        <Link to=\"/\" className=\"btn btn-lg btn-outline-dark\">\n          Home\n        </Link>\n      \n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Header from \"../HomeHeader/HomeHeader\";\n\nexport default class List extends Component {\n  showParks = () => {\n    return this.props.listOfParks.map((eachPark, i) => {\n      // console.log(eachPark.attributes.ID)\n      return (\n        <div className=\"container d-flex flex-row\" key={i}>\n          {/* <div className=\"col-4\">\n            <img src={eachPark.fac} alt={eachPark.name} height=\"100px\" />\n          </div> */}\n          <div className=\"col-8\">\n            <Link to={\"/singlepark/\" + eachPark.attributes.ID}>\n              <h4 className=\"name\">{eachPark.attributes.NAME}</h4>\n            </Link>\n            Address: {eachPark.attributes.ADDRESS}\n            <p className=\"contributor\">Phone: {eachPark.attributes.PHONE}</p>\n          </div>\n        </div>\n      );\n    });\n  };\n  render() {\n    // console.log(this.props.listOfParks)\n    return (\n      <div>\n        <Header />\n        <h1>List of Parks</h1>\n        {this.showParks()}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Header from \"../HomeHeader/HomeHeader\";\n\nfunction Single(props) {\n  // console.log(props.listOfParks)\n  let randomPark = props.randomPark;\n  let thePark;\n  if (randomPark) {\n    thePark = props.listOfParks.find(park => {\n      return park.attributes.ID === randomPark;\n    });\n  } else {\n    thePark = props.listOfParks.find(park => {\n      return park.attributes.ID === props.match.params.id;\n    });\n  }\n\n  return (\n    <div>\n      <Header />\n      <div className=\"container d-flex flex-column\">\n        <div>\n          {/* <img src={thePark.attributes.iD} alt={thePark.name} width=\"100px\" /> */}\n        </div>\n        <div>\n          <h1>{thePark.attributes.NAME}</h1>\n          <h3 className=\"tagline\">Address: {thePark.attributes.ADDRESS}</h3>\n          <p>Phone: {thePark.attributes.PHONE}</p>\n          <p>Latitude: {thePark.attributes.LAT}</p>\n          <p>Longitude: {thePark.attributes.LON}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Single;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Header extends Component {\n\n  render() {\n   \n\n    return (\n      <div className={\"container\"}>\n      <Link to=\"/ironrest/\" className=\"btn btn-lg btn-outline-info\">\n      <h3>Ironrest</h3>\n      </Link><br />\n      <Link to=\"/singleevent/\" className=\"btn btn-lg btn-outline-danger\">\n      <h3>Single Event</h3>\n      </Link><br />\n        <Link to=\"/listpark/\" className=\"btn btn-lg btn-outline-success\">\n        <h3>List of Parks</h3>\n        </Link><br />\n        <Link to=\"/randompark/\" className=\"btn btn-lg btn-outline-success\">\n        <h3>Random Park</h3>\n        </Link><br />\n        <Link to=\"/new/\" className=\"btn btn-lg btn-outline-danger\">\n        <h3>Add a Event</h3>\n        </Link><br />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport SinglePark from \"../SinglePark/SinglePark\"\nimport Header from \"../Header/Header\"\n\nfunction Random(props) {\n  let randomNumber = Math.floor(Math.random() * props.listOfParks.length);\n\n  let thePark = props.listOfParks[randomNumber];\n\n  // console.log(thePark)\n  return (\n    <div>\n    <Header />\n      <SinglePark randomPark={thePark.attributes.ID} listOfParks={props.listOfParks} />\n    </div>\n  );\n}\nexport default Random;\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport Header from \"../HomeHeader/HomeHeader\";\n\nexport default class AddNewEvent extends Component {\n  constructor() {\n    super();\n    this.state = {\n      \n        name: \"\",\n        tagline: \"\",\n        description: \"\",\n        first_brewed: \"\",\n        brewers_tips: \"\",\n        attenuation_level: 0,\n        contributed_by: \"\",\n        message: \"\"\n      \n    };\n  }\n  handleInput = e => {\n    // console.log(e.target.value)\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  submitNewPark = e => {\n    e.preventDefault();\n\n    // const park = {\n    //   name: this.state.name,\n    //   tagline: this.state.tagline,\n    //   description: this.state.description,\n    //   first_brewed: this.state.first_brewed,\n    //   brewers_tips: this.state.brewers_tips,\n    //   attenuation_level: this.state.attenuation_level,\n    //   contributed_by: this.state.contributed_by\n    // }\n    \n    // console.log(park)\n\n    Axios.post(\"http://ironrest.herokupp.com/createCollection/avrahm\")\n    .then(res => {\n      console.log(res)\n      this.setState({\n        message: \"Posted Successfully\"\n      })\n    })\n    .catch(err => {\n      console.error(err)\n      this.setState({\n        message: \"Error!\"\n      })\n    })\n  };\n\n  render() {\n    return (\n      <div>\n      <Header />\n      <h1>{this.state.message}</h1>\n        <form className=\"container\" onSubmit={this.submitNewPark}>\n          <label htmlFor=\"name\">Name</label>\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            name=\"name\"\n            onChange={this.handleInput}\n            value={this.state.name}\n          />\n          <label htmlFor=\"tagline\">Tagline</label>\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            name=\"tagline\"\n            onChange={this.handleInput}\n            value={this.state.tagline}\n          />\n          <label htmlFor=\"description\">Description</label>\n          <textarea\n            className=\"form-control\"\n            type=\"text\"\n            name=\"description\"\n            height=\"100px\"\n            onChange={this.handleInput}\n            value={this.state.description}\n          ></textarea>\n          <label htmlFor=\"first_brewed\">First Brewed</label>\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            name=\"first_brewed\"\n            onChange={this.handleInput}\n            value={this.state.first_brewed}\n          />\n          <label htmlFor=\"brewers_tips\">Brewers Tips</label>\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            name=\"brewers_tips\"\n            onChange={this.handleInput}\n            value={this.state.brewers_tips}\n          />\n          <label htmlFor=\"attenuation_level\">Attenuation</label>\n          <input\n            className=\"form-control\"\n            type=\"number\"\n            name=\"attenuation_level\"\n            onChange={this.handleInput}\n            value={this.state.attenuation_level}\n          />\n          <label htmlFor=\"contributed_by\">Contributed By</label>\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            name=\"contributed_by\"\n            onChange={this.handleInput}\n            value={this.state.contributed_by}\n          />\n          <button className=\"button btn-lg\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\n// import Axios from 'axios'\n\nexport default class ironrest extends Component {\n\n\n    // componentDidMount(){\n        \n    //     Axios.post(\"https://ironrest.herokuapp.com/avrahm\", {event: {name: \"testing event\", date: \"10-05-19\", location: \"Tamiami Park\"}})\n    // .then(res => {\n    //   console.log(res)\n      \n    // })\n    // .catch(err => {\n    //   console.error(err)\n      \n    // })\n    // }\n    render() {\n        return (\n            <div>\n                Works\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport ListPark from \"./components/ListOfParks/ListOfParks\";\nimport SinplePark from \"./components/SinglePark/SinglePark\";\nimport Random from \"./components/RandomPark/RandomPark\";\nimport AddNewEvent from \"./components/AddNewEvent/AddNewEvent\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Header from \"./components/Header/Header\";\nimport axios from \"axios\";\nimport ironrest from \"./components/ironrest\"\nimport eventbrite from 'eventbrite'\n\n \n// // Create configured Eventbrite SDK\n// const sdk = eventbrite({token: 'BA6XEE7Q2XYR6CAIRDS6'});\n \n// // See: https://www.eventbrite.com/developer/v3/endpoints/users/#ebapi-get-users-id\n// sdk.request('https://www.eventbriteapi.com/v3/events/search/?sort_by=date&location.within=5mi&location.latitude=25.59338&location.longitude=-80.38397&price=free&start_date.keyword=today&date_modified.keyword=today&search_type=promoted').then(res => {\n//     // handle response data\n//     console.log(res)\n// }).catch(err => console.log(err))\n\n\nclass App extends Component {\n  state = {\n    theParksFromMiamiDade: null,\n    theEventsFromEventful: null,\n    thePlacesFromFourSquare: null,\n    showHeader: true,\n    ready: false\n  };\n\n  componentDidMount() {\n    //Miami Dade Parks and Recs JSON API\n    axios\n      .get(\"https://gisweb.miamidade.gov/arcgis/rest/services/Parks/MD_Parks305/MapServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json\")\n      .then(theResults => {\n        let x = theResults.data.features;\n        this.setState({\n          theParksFromMiamiDade: x,\n          ready: true\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n\n      axios.get(\"https://developers.zomato.com/api/v2.1/categories\", {\n\t\"headers\": {\n    \"user-key\": \"4569b784af3edb69f8ac01194e26cd10\",\n    // Accept: \"application/json\"\n\t}\n})\n.then(response => {\n\tconsole.log(response);\n})\n.catch(err => {\n\tconsole.log(err);\n});\n\n      // axios.get(\n      //   'https://www.eventbrite.com/'\n      // )\n      // // .get(\"https://www.eventbriteapi.com/v3/events/search/?sort_by=date&location.within=5mi&location.latitude=25.59338&location.longitude=-80.38397&price=free&start_date.keyword=today&date_modified.keyword=today&search_type=promoted&token=BA6XEE7Q2XYR6CAIRDS6\")\n      // .then(theResults => {\n      //   let x = theResults.events;\n      //   console.log(theResults)\n      //   this.setState({\n      //     theEventsFromEventful: x,\n      //     ready: true\n      //   });\n      // })\n      // .catch(err => {\n      //   console.log(err);\n      // });\n\n\n    //   axios\n    //   .get('https://api.foursquare.com/v2/venues/explore?client_id=ERXH5IHTI1QJNGSLJQ3GCI2YQLXJQPB102PYT12ZDRHUFXHT&client_secret=Y3NN5QLPV3YN5NBNZTWZDVYJBDMI1NTAHVFPRSCMLMKVMANG&v=20180323&limit=1&ll=40.7243,-74.0018&query=basketball')\n    // .then(theResults => {\n    //   let x = theResults.data;\n    //   this.setState({\n    //     thePlacesFromFourSquare: x,\n    //     ready: true\n    //   });\n    // })\n    // .catch(err => {\n    //   console.log(err);\n    // });\n\n//     const eventbrite = require('eventbrite');\n \n// // Create configured Eventbrite SDK\n// const sdk = eventbrite({token: 'BA6XEE7Q2XYR6CAIRDS6'});\n \n// // See: https://www.eventbrite.com/developer/v3/endpoints/users/#ebapi-get-users-id\n// sdk.request('/users/me').then(res => {\n//     // handle response data\n// });\n\n  }\n\n  render() { \n    console.log(this.state.thePlacesFromFourSquare)\n    if (this.state.ready) {\n      return (\n        <div className=\"App\">\n          <Switch>\n\n            <Route exact path=\"/\" component={Header} />\n            <Route\n              exact\n              path=\"/listpark/\"\n              render={props => (\n                <ListPark {...props} listOfParks={this.state.theParksFromMiamiDade} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/singlepark/:id\"\n              render={props => (\n                <SinplePark {...props} listOfParks={this.state.theParksFromMiamiDade} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/listevent/\"\n              render={props => (\n                <ListPark {...props} listOfParks={this.state.theEventsFromEventful} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/singleevent/:id\"\n              render={props => (\n                <SinplePark {...props} listOfParks={this.state.theEventsFromEventful} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/randompark/\"\n              render={props => (\n                <Random {...props} listOfParks={this.state.theParksFromMiamiDade} />\n              )}\n            />\n            <Route exact path=\"/new/\" component={AddNewEvent} />\n            <Route exact path=\"/ironrest/\" component={ironrest} />\n          </Switch>\n        </div>\n      );\n    } else {\n      return <h1>Loading....</h1>;\n    }\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"],"sourceRoot":""}